From 975df94d542118a7d9dbfbaf83a9dba35a0fdfa0 Mon Sep 17 00:00:00 2001
From: Anthony Rabbito <arabbito@coreweave.com>
Date: Fri, 31 Oct 2025 17:02:55 -0400
Subject: [PATCH 1/2] feat: add sources parameter to override source fetcher

Adds ability to override the source fetcher by passing a 'sources'
parameter to buildGoApplication. This allows providing custom sources
for specific packages without modifying the fetcher logic.

Based on: https://github.com/nix-community/gomod2nix/pull/123

Usage:
  buildGoApplication {
    sources = {
      "github.com/example/package_v1.0.0" = customSource;
    };
  }
---
 builder/default.nix | 35 +++++++++++++++++------------------
 1 file changed, 17 insertions(+), 18 deletions(-)

diff --git a/builder/default.nix b/builder/default.nix
index 6d765dc..91d80a0 100644
--- a/builder/default.nix
+++ b/builder/default.nix
@@ -35,6 +35,7 @@ let
     optionalAttrs
     optionalString
     pathExists
+    removeAttrs
     removePrefix
     ;
 
@@ -70,9 +71,16 @@ let
       goPackagePath,
       version,
       go,
+      previousSources,
     }:
-    stdenvNoCC.mkDerivation {
-      name = "${baseNameOf goPackagePath}_${version}";
+    let
+      packageName = "${baseNameOf goPackagePath}_${version}";
+    in
+    if hasAttr packageName previousSources then
+      previousSources.${packageName}
+    else
+      stdenvNoCC.mkDerivation {
+        name = packageName;
       builder = ./fetch.sh;
       inherit goPackagePath version;
       nativeBuildInputs = [
@@ -95,6 +103,7 @@ let
       defaultPackage ? "",
       goMod,
       pwd,
+      previousSources,
     }:
     let
       localReplaceCommands =
@@ -115,6 +124,7 @@ let
           goPackagePath = meta.replaced or goPackagePath;
           inherit (meta) version hash;
           inherit go;
+          inherit previousSources;
         }
       ) modulesStruct.mod;
     in
@@ -278,7 +288,7 @@ let
       passthru ? { },
       tags ? [ ],
       ldflags ? [ ],
-
+      sources ? { },
       ...
     }@attrs:
     let
@@ -293,13 +303,8 @@ let
       defaultPackage = modulesStruct.goPackagePath or "";
 
       vendorEnv = mkVendorEnv {
-        inherit
-          defaultPackage
-          go
-          goMod
-          modulesStruct
-          pwd
-          ;
+        inherit go modulesStruct defaultPackage goMod pwd;
+        previousSources = sources;
       };
 
       pname = attrs.pname or baseNameOf defaultPackage;
@@ -313,14 +318,8 @@ let
       }
       // optionalAttrs (hasAttr "subPackages" modulesStruct) {
         subPackages = modulesStruct.subPackages;
-      }
-      // attrs
-      // {
-        nativeBuildInputs = [
-          rsync
-          go
-        ]
-        ++ nativeBuildInputs;
+      } // removeAttrs attrs  [ "sources" ] // {
+        nativeBuildInputs = [ rsync go ] ++ nativeBuildInputs;
 
         inherit (go) GOOS GOARCH;
 
-- 
2.51.0

